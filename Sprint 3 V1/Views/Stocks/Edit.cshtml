@model Sprint_3_V1.Models.Stock

@{
    ViewBag.Title = "Edit";
}
<link href='@Url.Content("~/Content/Style.css")' rel="stylesheet" type="text/css" />
<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Stocks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Stock</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StockID)

        <div class="form-group">
            @Html.LabelFor(model => model.CurQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HarQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HarQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HarQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Harvested, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Harvested, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Harvested)
                @Html.ValidationMessageFor(model => model.Harvested, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Expiery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Expiery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Expiery)
                @Html.ValidationMessageFor(model => model.Expiery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpFlag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ExpFlag)
                    @Html.ValidationMessageFor(model => model.ExpFlag, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                <div class="text-danger">
                    @ViewBag.priceMessage
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Disabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Disabled)
                    @Html.ValidationMessageFor(model => model.Disabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CropID, "CropID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CropID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CropID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StocksImage, "Crop Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StockImage", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StocksImage, "", new { @class = "text-danger" })
            </div>
        </div>


        @*    <div class="form-group">
                  @Html.LabelFor(model => model.StockImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @try
                            {

                                var base64 = Convert.ToBase64String(Model.StockImage);
                                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                            <img src='@imgsrc' style="max-width:100px;max-height:100px" />

                        }
                        catch
                        {
                            if (Model.StockImage == null)
                            {
                                <img id="ImageHolder" width="40" height="40" src="https://ixxidesign.azureedge.net/media/2388044/marcus-kraft-12-dont-worry-be-happy-white.jpg?mode=max&width=562&height=749" />
                            }
                        }

                <br />
                <input type="file" name="stockImage" id="stockImage" />
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
